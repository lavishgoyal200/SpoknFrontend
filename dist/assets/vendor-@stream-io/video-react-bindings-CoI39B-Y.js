import{j as l,r as c}from"../vendor-react-Bo3cQ_TK.js";import{i as y}from"../vendor-i18next-Bhc83OLH.js";import{C as D,r as v}from"./video-client-elMmITr2.js";import{o as A}from"../vendor-rxjs-BlCF6R4j.js";const I=c.createContext(void 0),be=e=>{const{call:t,children:n}=e;return l.jsx(I.Provider,{value:t,children:n})},d=()=>c.useContext(I),k=(e,t)=>Object.entries(e).reduce((n,[o,a])=>(n[o]={[t]:a},n),{}),p=e=>e;class E{constructor({debug:t=!1,currentLanguage:n="en",fallbackLanguage:o,translationsOverrides:a={en:{}}}={}){this.t=p,this.init=async()=>(this.t=await this.i18nInstance.init(),this.t),this.changeLanguage=async u=>(this.t=await this.i18nInstance.changeLanguage(u),this.t);const i="stream-video";this.i18nInstance=y.createInstance({debug:t,defaultNS:i,fallbackLng:o,interpolation:{escapeValue:!1},keySeparator:!1,lng:n,nsSeparator:!1,parseMissingKeyHandler:p,resources:k(a,i)})}get currentLanguage(){return this.i18nInstance.language}get isInitialized(){return this.i18nInstance.isInitialized}}const R=c.createContext({t:p}),L=({children:e,...t})=>{const n=B(t);return l.jsx(R.Provider,{value:n,children:e})},B=({i18nInstance:e,language:t,fallbackLanguage:n,translationsOverrides:o})=>{const[a]=c.useState(()=>e||new E({currentLanguage:t,fallbackLanguage:n,translationsOverrides:o})),[i,u]=c.useState(()=>a.t);return c.useEffect(()=>{a.isInitialized?a.currentLanguage!==t&&a.changeLanguage(t).then(()=>u(()=>a.t)):a.init().then(()=>u(()=>a.t))},[a,t]),c.useMemo(()=>({i18n:a,t:i}),[a,i])},we=()=>c.useContext(R),M=c.createContext(void 0),xe=({children:e,client:t,i18nInstance:n,language:o,translationsOverrides:a})=>l.jsx(M.Provider,{value:t,children:l.jsx(L,{i18nInstance:n,language:o,translationsOverrides:a,children:e})}),O=()=>{var e;return typeof navigator>"u"?!1:((e=navigator.product)==null?void 0:e.toLowerCase())==="reactnative"},s=(e,t)=>{const[n,o]=c.useState(()=>{try{return v.getCurrentValue(e)}catch(a){if(typeof t>"u")throw a;return t}});return c.useEffect(()=>v.createSubscription(e,o,a=>{console.log("An error occurred while reading an observable",a),t&&o(t)}),[t,e]),n},f=Object.freeze([]),r=()=>{const e=d();return e?e.state:(console.warn('You are using useCallState() outside a Call context. Please wrap your component in <StreamCall /> and provide a "call" instance.'),new D)},b=()=>{const{recording$:e}=r();return s(e)},j=()=>{const{egress$:e}=r(),t=s(e);return t?t.broadcasting:!1},T=()=>{const{backstage$:e}=r();return!s(e)},H=()=>{const{blockedUserIds$:e}=r();return s(e)},z=()=>{const{createdAt$:e}=r();return s(e)},F=()=>{const{endedAt$:e}=r();return s(e)},U=()=>{const{startsAt$:e}=r();return s(e)},V=()=>{const{updatedAt$:e}=r();return s(e)},_=()=>{const{createdBy$:e}=r();return s(e)},N=()=>{const{custom$:e}=r();return s(e)},Y=()=>{const{egress$:e}=r();return s(e)},W=()=>{const{ingress$:e}=r();return s(e)},q=()=>{const{session$:e}=r();return s(e)},K=()=>{const{settings$:e}=r();return s(e)},J=()=>{const{transcribing$:e}=r();return s(e)},Q=()=>{const{endedBy$:e}=r();return s(e)},X=()=>{const{hasOngoingScreenShare$:e}=r();return s(e)},Z=()=>{const{callStatsReport$:e}=r();return s(e)},G=()=>{const{dominantSpeaker$:e}=r();return s(e)},ee=()=>{const{members$:e}=r();return s(e)},te=()=>{const{callingState$:e}=r();return s(e)},se=()=>{const{startedAt$:e}=r();return s(e)},ne=({sortBy:e}={})=>{const{participants$:t}=r(),n=s(t);return c.useMemo(()=>e?[...n].sort(e):n,[n,e])},re=()=>{const{rawParticipants$:e}=r();return s(e)},ae=()=>{const{localParticipant$:e}=r();return s(e)},oe=()=>{const{remoteParticipants$:e}=r();return s(e)},ie=()=>{const{participantCount$:e}=r();return s(e)},ce=()=>{const{anonymousParticipantCount$:e}=r();return s(e)},ue=()=>{const{thumbnails$:e}=r();return s(e)},w=()=>{const{ownCapabilities$:e}=r();return s(e)},le=(...e)=>{const t=w();return e.every(n=>t==null?void 0:t.includes(n))},de=()=>{const e=d(),{camera:t}=e,{state:n}=t,o=s(n.direction$),a=s(n.mediaStream$),i=s(n.selectedDevice$),{getDevices:u}=h(t),C=s(n.hasBrowserPermission$),g=s(n.isPromptingPermission$);return{camera:t,direction:o,mediaStream:a,get devices(){return u()},hasBrowserPermission:C,isPromptingPermission:g,selectedDevice:i,...S(s(n.status$),s(n.optimisticStatus$))}},ge=()=>{const e=d(),{microphone:t}=e,{state:n}=t,o=s(n.mediaStream$),a=s(n.selectedDevice$),{getDevices:i}=h(t),u=s(n.hasBrowserPermission$),C=s(n.isPromptingPermission$),g=s(n.speakingWhileMuted$);return{microphone:t,mediaStream:o,get devices(){return i()},selectedDevice:a,hasBrowserPermission:u,isPromptingPermission:C,isSpeakingWhileMuted:g,...S(s(n.status$),s(n.optimisticStatus$))}},Ce=()=>{if(O())throw new Error("This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details");const e=d(),{speaker:t}=e,{getDevices:n}=h(t),o=s(t.state.selectedDevice$);return{speaker:t,get devices(){return n()},selectedDevice:o,isDeviceSelectionSupported:t.state.isDeviceSelectionSupported}},me=()=>{const e=d(),{screenShare:t}=e;return{screenShare:t,mediaStream:s(t.state.mediaStream$),...S(s(t.state.status$),s(t.state.optimisticStatus$))}},pe=()=>{const e=d();return s(e.dynascaleManager.incomingVideoSettings$)},Se=()=>{const{closedCaptions$:e}=r();return s(e)},he=()=>{const{captioning$:e}=r();return s(e)};function S(e,t){const n=t??e;return{status:e,optimisticStatus:n,isEnabled:e==="enabled",isMute:e!=="enabled",optimisticIsMute:n!=="enabled",isTogglePending:n!==e}}function h(e){const t=c.useMemo(()=>A(f),[]),[n,o]=c.useState(t),a=s(n,f);return{getDevices:()=>(n===t&&o(e.listDevices()),a)}}var $e=Object.freeze({__proto__:null,useAnonymousParticipantCount:ce,useCallBlockedUserIds:H,useCallCallingState:te,useCallClosedCaptions:Se,useCallCreatedAt:z,useCallCreatedBy:_,useCallCustomData:N,useCallEgress:Y,useCallEndedAt:F,useCallEndedBy:Q,useCallIngress:W,useCallMembers:ee,useCallSession:q,useCallSettings:K,useCallStartedAt:se,useCallStartsAt:U,useCallState:r,useCallStatsReport:Z,useCallThumbnail:ue,useCallUpdatedAt:V,useCameraState:de,useDominantSpeaker:G,useHasOngoingScreenShare:X,useHasPermissions:le,useIncomingVideoSettings:pe,useIsCallCaptioningInProgress:he,useIsCallHLSBroadcastingInProgress:j,useIsCallLive:T,useIsCallRecordingInProgress:b,useIsCallTranscribingInProgress:J,useLocalParticipant:ae,useMicrophoneState:ge,useOwnCapabilities:w,useParticipantCount:ie,useParticipants:ne,useRawParticipants:re,useRemoteParticipants:oe,useScreenShareState:me,useSpeakerState:Ce});const ye=()=>{const e=d(),t=b(),[n,o]=c.useState(!1);return c.useEffect(()=>{o(i=>i&&!1)},[t]),{toggleCallRecording:c.useCallback(async()=>{try{o(!0),t?await(e==null?void 0:e.stopRecording()):await(e==null?void 0:e.startRecording())}catch(i){throw console.error("Failed start recording",i),i}},[e,t]),isAwaitingResponse:n,isCallRecordingInProgress:t}},Pe=()=>$e,De=({canRequestOnly:e,hasPermissionsOnly:t,requiredGrants:n,requireAll:o=!0,children:a})=>{const i=d(),{useCallSettings:u,useOwnCapabilities:C}=Pe(),g=C(),x=u(),$=n[o?"every":"some"](m=>g==null?void 0:g.includes(m));if(t)return $?l.jsx(l.Fragment,{children:a}):null;const P=n.some(m=>i==null?void 0:i.permissionsContext.canRequest(m,x));return e?P?l.jsx(l.Fragment,{children:a}):null:$||P?l.jsx(l.Fragment,{children:a}):null};export{De as R,be as S,xe as a,Pe as b,we as c,ye as d,d as u};
